class Groups(Cluster):
    """Attributes and commands for group configuration and
    manipulation.
    """

    NameSupport: Final = NameSupport

    cluster_id: Final[t.uint16_t] = 0x0004
    ep_attribute: Final = "groups"

    class AttributeDefs(BaseAttributeDefs):
        name_support: Final = ZCLAttributeDef(
            id=0x0000, type=NameSupport, access="r", mandatory=True
        )
        cluster_revision: Final = foundation.ZCL_CLUSTER_REVISION_ATTR
        reporting_status: Final = foundation.ZCL_REPORTING_STATUS_ATTR

    class ServerCommandDefs(BaseCommandDefs):
        add: Final = ZCLCommandDef(
            id=0x00,
            schema={"group_id": t.Group, "group_name": t.LimitedCharString(16)},
            direction=Direction.Client_to_Server,
        )
        view: Final = ZCLCommandDef(
            id=0x01, schema={"group_id": t.Group}, direction=Direction.Client_to_Server
        )
        get_membership: Final = ZCLCommandDef(
            id=0x02,
            schema={"groups": t.LVList[t.Group]},
            direction=Direction.Client_to_Server,
        )
        remove: Final = ZCLCommandDef(
            id=0x03, schema={"group_id": t.Group}, direction=Direction.Client_to_Server
        )
        remove_all: Final = ZCLCommandDef(
            id=0x04, schema={}, direction=Direction.Client_to_Server
        )
        add_if_identifying: Final = ZCLCommandDef(
            id=0x05,
            schema={"group_id": t.Group, "group_name": t.LimitedCharString(16)},
            direction=Direction.Client_to_Server,
        )

    class ClientCommandDefs(BaseCommandDefs):
        add_response: Final = ZCLCommandDef(
            id=0x00,
            schema={"status": foundation.Status, "group_id": t.Group},
            direction=Direction.Server_to_Client,
        )
        view_response: Final = ZCLCommandDef(
            id=0x01,
            schema={
                "status": foundation.Status,
                "group_id": t.Group,
                "group_name": t.LimitedCharString(16),
            },
            direction=Direction.Server_to_Client,
        )
        get_membership_response: Final = ZCLCommandDef(
            id=0x02,
            schema={"capacity": t.uint8_t, "groups": t.LVList[t.Group]},
            direction=Direction.Server_to_Client,
        )
        remove_response: Final = ZCLCommandDef(
            id=0x03,
            schema={"status": foundation.Status, "group_id": t.Group},
            direction=Direction.Server_to_Client,
        )