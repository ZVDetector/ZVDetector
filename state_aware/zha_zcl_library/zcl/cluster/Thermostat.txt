class Thermostat(Cluster):
    """An interface for configuring and controlling the
    functionality of a thermostat.
    """

    ACCapacityFormat: Final = ACCapacityFormat
    ACErrorCode: Final = ACErrorCode
    ACLouverPosition: Final = ACLouverPosition
    AlarmMask: Final = AlarmMask
    ControlSequenceOfOperation: Final = ControlSequenceOfOperation
    SeqDayOfWeek: Final = SeqDayOfWeek
    SeqMode: Final = SeqMode
    Occupancy: Final = Occupancy
    ProgrammingOperationMode: Final = ProgrammingOperationMode
    RemoteSensing: Final = RemoteSensing
    SetpointChangeSource: Final = SetpointChangeSource
    SetpointMode: Final = SetpointMode
    StartOfWeek: Final = StartOfWeek
    SystemMode: Final = SystemMode
    SystemType: Final = SystemType
    TemperatureSetpointHold: Final = TemperatureSetpointHold
    RunningMode: Final = RunningMode
    RunningState: Final = RunningState

    cluster_id: Final[t.uint16_t] = 0x0201
    ep_attribute: Final = "thermostat"

    class AttributeDefs(BaseAttributeDefs):
        # Thermostat Information
        local_temperature: Final = ZCLAttributeDef(
            id=0x0000, type=t.int16s, access="rp", mandatory=True
        )
        outdoor_temperature: Final = ZCLAttributeDef(
            id=0x0001, type=t.int16s, access="r"
        )
        occupancy: Final = ZCLAttributeDef(id=0x0002, type=Occupancy, access="r")
        abs_min_heat_setpoint_limit: Final = ZCLAttributeDef(
            id=0x0003, type=t.int16s, access="r"
        )
        abs_max_heat_setpoint_limit: Final = ZCLAttributeDef(
            id=0x0004, type=t.int16s, access="r"
        )
        abs_min_cool_setpoint_limit: Final = ZCLAttributeDef(
            id=0x0005, type=t.int16s, access="r"
        )
        abs_max_cool_setpoint_limit: Final = ZCLAttributeDef(
            id=0x0006, type=t.int16s, access="r"
        )
        pi_cooling_demand: Final = ZCLAttributeDef(
            id=0x0007, type=t.uint8_t, access="rp"
        )
        pi_heating_demand: Final = ZCLAttributeDef(
            id=0x0008, type=t.uint8_t, access="rp"
        )
        system_type_config: Final = ZCLAttributeDef(
            id=0x0009, type=SystemType, access="r*w"
        )
        # Thermostat Settings
        local_temperature_calibration: Final = ZCLAttributeDef(
            id=0x0010, type=t.int8s, access="rw"
        )
        # At least one of these two attribute sets will be available
        occupied_cooling_setpoint: Final = ZCLAttributeDef(
            id=0x0011, type=t.int16s, access="rws"
        )
        occupied_heating_setpoint: Final = ZCLAttributeDef(
            id=0x0012, type=t.int16s, access="rws"
        )
        unoccupied_cooling_setpoint: Final = ZCLAttributeDef(
            id=0x0013, type=t.int16s, access="rw"
        )
        unoccupied_heating_setpoint: Final = ZCLAttributeDef(
            id=0x0014, type=t.int16s, access="rw"
        )
        min_heat_setpoint_limit: Final = ZCLAttributeDef(
            id=0x0015, type=t.int16s, access="rw"
        )
        max_heat_setpoint_limit: Final = ZCLAttributeDef(
            id=0x0016, type=t.int16s, access="rw"
        )
        min_cool_setpoint_limit: Final = ZCLAttributeDef(
            id=0x0017, type=t.int16s, access="rw"
        )
        max_cool_setpoint_limit: Final = ZCLAttributeDef(
            id=0x0018, type=t.int16s, access="rw"
        )
        min_setpoint_dead_band: Final = ZCLAttributeDef(
            id=0x0019, type=t.int8s, access="r*w"
        )
        remote_sensing: Final = ZCLAttributeDef(
            id=0x001A, type=RemoteSensing, access="rw"
        )
        ctrl_sequence_of_oper: Final = ZCLAttributeDef(
            id=0x001B,
            type=ControlSequenceOfOperation,
            access="rw",
            mandatory=True,
        )
        system_mode: Final = ZCLAttributeDef(
            id=0x001C, type=SystemMode, access="rws", mandatory=True
        )
        alarm_mask: Final = ZCLAttributeDef(id=0x001D, type=AlarmMask, access="r")
        running_mode: Final = ZCLAttributeDef(id=0x001E, type=RunningMode, access="r")
        # Schedule
        start_of_week: Final = ZCLAttributeDef(id=0x0020, type=StartOfWeek, access="r")
        number_of_weekly_transitions: Final = ZCLAttributeDef(
            id=0x0021, type=t.uint8_t, access="r"
        )
        number_of_daily_transitions: Final = ZCLAttributeDef(
            id=0x0022, type=t.uint8_t, access="r"
        )
        temp_setpoint_hold: Final = ZCLAttributeDef(
            id=0x0023, type=TemperatureSetpointHold, access="rw"
        )
        temp_setpoint_hold_duration: Final = ZCLAttributeDef(
            id=0x0024, type=t.uint16_t, access="rw"
        )
        programing_oper_mode: Final = ZCLAttributeDef(
            id=0x0025, type=ProgrammingOperationMode, access="rwp"
        )
        # HVAC Relay
        running_state: Final = ZCLAttributeDef(id=0x0029, type=RunningState, access="r")
        # Thermostat Setpoint Change Tracking
        setpoint_change_source: Final = ZCLAttributeDef(
            id=0x0030, type=SetpointChangeSource, access="r"
        )
        setpoint_change_amount: Final = ZCLAttributeDef(
            id=0x0031, type=t.int16s, access="r"
        )
        setpoint_change_source_timestamp: Final = ZCLAttributeDef(
            id=0x0032, type=t.UTCTime, access="r"
        )
        occupied_setback: Final = ZCLAttributeDef(
            id=0x0034, type=t.uint8_t, access="rw"
        )
        occupied_setback_min: Final = ZCLAttributeDef(
            id=0x0035, type=t.uint8_t, access="r"
        )
        occupied_setback_max: Final = ZCLAttributeDef(
            id=0x0036, type=t.uint8_t, access="r"
        )
        unoccupied_setback: Final = ZCLAttributeDef(
            id=0x0037, type=t.uint8_t, access="rw"
        )
        unoccupied_setback_min: Final = ZCLAttributeDef(
            id=0x0038, type=t.uint8_t, access="r"
        )
        unoccupied_setback_max: Final = ZCLAttributeDef(
            id=0x0039, type=t.uint8_t, access="r"
        )
        emergency_heat_delta: Final = ZCLAttributeDef(
            id=0x003A, type=t.uint8_t, access="rw"
        )
        # AC Information
        ac_type: Final = ZCLAttributeDef(id=0x0040, type=ACType, access="rw")
        ac_capacity: Final = ZCLAttributeDef(id=0x0041, type=t.uint16_t, access="rw")
        ac_refrigerant_type: Final = ZCLAttributeDef(
            id=0x0042, type=ACRefrigerantType, access="rw"
        )
        ac_compressor_type: Final = ZCLAttributeDef(
            id=0x0043, type=ACCompressorType, access="rw"
        )
        ac_error_code: Final = ZCLAttributeDef(id=0x0044, type=ACErrorCode, access="rw")
        ac_louver_position: Final = ZCLAttributeDef(
            id=0x0045, type=ACLouverPosition, access="rw"
        )
        ac_coil_temperature: Final = ZCLAttributeDef(
            id=0x0046, type=t.int16s, access="r"
        )
        ac_capacity_format: Final = ZCLAttributeDef(
            id=0x0047, type=ACCapacityFormat, access="rw"
        )

    class ServerCommandDefs(BaseCommandDefs):
        setpoint_raise_lower: Final = ZCLCommandDef(
            id=0x00,
            schema={"mode": SetpointMode, "amount": t.int8s},
            direction=Direction.Client_to_Server,
        )
        set_weekly_schedule: Final = ZCLCommandDef(
            id=0x01,
            schema={
                "num_transitions_for_sequence": t.enum8,
                "day_of_week_for_sequence": SeqDayOfWeek,
                "mode_for_sequence": SeqMode,
                "values": t.List[t.int16s],
            },
            direction=Direction.Client_to_Server,
        )
        get_weekly_schedule: Final = ZCLCommandDef(
            id=0x02,
            schema={"days_to_return": SeqDayOfWeek, "mode_to_return": SeqMode},
            direction=Direction.Client_to_Server,
        )
        clear_weekly_schedule: Final = ZCLCommandDef(
            id=0x03, schema={}, direction=Direction.Client_to_Server
        )
        get_relay_status_log: Final = ZCLCommandDef(
            id=0x04, schema={}, direction=Direction.Client_to_Server
        )

    class ClientCommandDefs(BaseCommandDefs):
        get_weekly_schedule_response: Final = ZCLCommandDef(
            id=0x00,
            schema={
                "num_transitions_for_sequence": t.enum8,
                "day_of_week_for_sequence": SeqDayOfWeek,
                "mode_for_sequence": SeqMode,
                "values": t.List[t.int16s],
            },
            direction=Direction.Server_to_Client,
        )
        get_relay_status_log_response: Final = ZCLCommandDef(
            id=0x01,
            schema={
                "time_of_day": t.uint16_t,
                "relay_status": t.bitmap8,
                "local_temperature": t.int16s,
                "humidity_in_percentage": t.uint8_t,
                "set_point": t.int16s,
                "unread_entries": t.uint16_t,
            },
            direction=Direction.Server_to_Client,
        )